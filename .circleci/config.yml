# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/warrensbox/aws-find
    steps:
      - checkout
      - run: 
          command: |    
            set +e   
            go get -v -t -d ./...
            go vet -tests=false ./...
            go test -v ./...
            mkdir -p build
            go build -v -o build/awsfind

      - persist_to_workspace:
          root: build
          paths: awsfind

  test-ubuntu:
    docker:
      - image: "circleci/ubuntu-server"

    steps:
    
      - run: ls

      - attach_workspace:
          at: build

  test-alpine:
    docker:
      - image: "mhart/alpine-node"

    steps:
      - run: ls

  master-webpage:
    docker:
      - image: warrensbox/go-rb-py-aws

    steps:
      - checkout
      - run: 
          command: |
            git config user.email "warren.veerasingam@gmail.com"
            git config user.name "warrensbox"
            cd docs; bundle install --path vendor/bundler; bundle exec jekyll build -c _config.yml; cd ..
            git checkout master
            git merge release
            git push origin master

  release:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/warrensbox/aws-find
    steps:
      - checkout
      - run: 
          command: |    
            set +e   
            go get -v -t -d ./...
            go vet -tests=false ./...
            go test -v ./...
            mkdir -p build
            go build -v -o build/awsfind
            source version
            export RELEASE_VERSION; 
            RELEASE_VERSION=$RELEASE_VERSION.${CIRCLE_BUILD_NUM}
            export RELEASE_VERSION;
            echo $RELEASE_VERSION
            echo $GITHUB_TOKEN
            mkdir -p /home/circleci/bin
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            export PATH="/home/warrensbox/bin:${PATH}"
            rm -rf dist
            git config user.email "warren.veerasingam@gmail.com"
            git config user.name "warrensbox"
            git tag -a ${RELEASE_VERSION} -m "Release Version"
            git push origin ${RELEASE_VERSION}
            curl -L https://git.io/goreleaser | VERSION=v0.76.1 bash

workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - test-ubuntu:
          requires:
            - build
          filters:
            branches:
              only: 
              - master
              - release
      - test-alpine:
          requires:
            - build
          filters:
            branches:
              only: 
              - master
              - release
      - master-webpage:
          requires:
            - test-ubuntu
            - test-alpine
          filters:
            branches:
              only: 
              - master
              - release
      - release:
          requires:
            - master-webpage
          filters:
            branches:
              only: 
              - release


